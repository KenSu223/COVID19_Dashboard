{"ast":null,"code":"var _jsxFileName = \"/Users/Kevin/Desktop/program/cs 485/cdc dataset/src/components/BarChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { select } from 'd3-selection';\nimport { max } from 'd3-array';\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport { axisLeft, axisBottom } from 'd3-axis'; // margin convention often used with D3\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst margin = {\n  top: 80,\n  right: 60,\n  bottom: 80,\n  left: 60\n};\nconst width = 600 - margin.left - margin.right;\nconst height = 600 - margin.top - margin.bottom;\nconst color = ['#f05440', '#d5433d', '#b33535', '#283250'];\n\nconst BarChart = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const d3svg = useRef(null);\n  useEffect(() => {\n    if (data && d3svg.current) {\n      let svg = select(d3svg.current); // scales\n\n      const xMax = max(data, d => d.revenue);\n      const xScale = scaleLinear().domain([0, xMax]).range([0, width]);\n      const yScale = scaleBand().domain(data.map(d => d.genre)).rangeRound([0, height]).paddingInner(0.25); // append group translated to chart area\n\n      svg = svg.append('g').attr('transform', `translate(${margin.left}, ${margin.top})`); // draw header\n\n      svg.append('g').attr('class', 'bar-header').attr('transform', `translate(0, ${-margin.top / 2})`).append('text').append('tspan').text('Horizontal bar chart'); // draw bars\n\n      svg.selectAll('.bar').data(data).enter().append('rect').attr('class', 'bar').attr('y', d => yScale(d.genre)).attr('width', d => xScale(d.revenue)).attr('height', yScale.bandwidth()).style('fill', function (d, i) {\n        return color[i % 4]; // use colors in sequence\n      }); // draw axes\n\n      const xAxis = axisBottom(xScale);\n      svg.append('g').attr('class', 'x axis').attr('transform', `translate(0,${height + margin.bottom / 3})`).call(xAxis);\n      const yAxis = axisLeft(yScale).tickSize(0);\n      svg.append('g').attr('class', 'y axis').attr('transform', `translate(${-margin.left / 3},0)`).call(yAxis);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"bar-chart-container\",\n    width: width + margin.left + margin.right,\n    height: height + margin.top + margin.bottom,\n    role: \"img\",\n    ref: d3svg\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BarChart, \"nOLqnep8oUNDbjBvpONTmbP2Pjs=\");\n\n_c = BarChart;\nexport default BarChart; // style={{ pointerEvents: 'all', width: '100%', height: '100%' }}\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/Users/Kevin/Desktop/program/cs 485/cdc dataset/src/components/BarChart.js"],"names":["React","useEffect","useRef","select","max","scaleLinear","scaleBand","axisLeft","axisBottom","margin","top","right","bottom","left","width","height","color","BarChart","data","d3svg","current","svg","xMax","d","revenue","xScale","domain","range","yScale","map","genre","rangeRound","paddingInner","append","attr","text","selectAll","enter","bandwidth","style","i","xAxis","call","yAxis","tickSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { select } from 'd3-selection'\nimport { max } from 'd3-array'\nimport { scaleLinear, scaleBand } from 'd3-scale'\nimport { axisLeft, axisBottom } from 'd3-axis'\n\n// margin convention often used with D3\nconst margin = { top: 80, right: 60, bottom: 80, left: 60 }\nconst width = 600 - margin.left - margin.right\nconst height = 600 - margin.top - margin.bottom\n\nconst color = ['#f05440', '#d5433d', '#b33535', '#283250']\n\nconst BarChart = ({ data }) => {\n  const d3svg = useRef(null)\n\n  useEffect(() => {\n    if (data && d3svg.current) {\n      let svg = select(d3svg.current)\n\n      // scales\n      const xMax = max(data, d => d.revenue)\n\n      const xScale = scaleLinear()\n        .domain([0, xMax])\n        .range([0, width])\n\n      const yScale = scaleBand()\n        .domain(data.map(d => d.genre))\n        .rangeRound([0, height])\n        .paddingInner(0.25)\n\n      // append group translated to chart area\n      svg = svg.append('g').attr('transform', `translate(${margin.left}, ${margin.top})`)\n\n      // draw header\n      svg\n        .append('g')\n        .attr('class', 'bar-header')\n        .attr('transform', `translate(0, ${-margin.top / 2})`)\n        .append('text')\n        .append('tspan')\n        .text('Horizontal bar chart')\n\n      // draw bars\n      svg\n        .selectAll('.bar')\n        .data(data)\n        .enter()\n        .append('rect')\n        .attr('class', 'bar')\n        .attr('y', d => yScale(d.genre))\n        .attr('width', d => xScale(d.revenue))\n        .attr('height', yScale.bandwidth())\n        .style('fill', function(d, i) {\n          return color[i % 4] // use colors in sequence\n        })\n\n      // draw axes\n      const xAxis = axisBottom(xScale)\n      svg\n        .append('g')\n        .attr('class', 'x axis')\n        .attr('transform', `translate(0,${height + margin.bottom / 3})`)\n        .call(xAxis)\n\n      const yAxis = axisLeft(yScale).tickSize(0)\n      svg\n        .append('g')\n        .attr('class', 'y axis')\n        .attr('transform', `translate(${-margin.left / 3},0)`)\n        .call(yAxis)\n    }\n  }, [data])\n\n  return (\n    <svg\n      className=\"bar-chart-container\"\n      width={width + margin.left + margin.right}\n      height={height + margin.top + margin.bottom}\n      role=\"img\"\n      ref={d3svg}\n    ></svg>\n  )\n}\n\nexport default BarChart\n\n// style={{ pointerEvents: 'all', width: '100%', height: '100%' }}\n"]},"metadata":{},"sourceType":"module"}