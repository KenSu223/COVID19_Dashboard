{"ast":null,"code":"var _jsxFileName = \"/Users/Kevin/Desktop/program/cs 485/cdc dataset/src/components/USMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { select, geoPath, geoMercator, min, max, scaleLinear } from \"d3\"; // import useResizeObserver from \"./useResizeObserver\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction USMap(_ref) {\n  _s();\n\n  let {\n    data,\n    property\n  } = _ref;\n  const svgRef = useRef();\n  const wrapperRef = useRef(); // const dimensions = useResizeObserver(wrapperRef);\n\n  const [selectedCountry, setSelectedCountry] = useState(null); // will be called initially and on every data change\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    var url = \"https://gist.githubusercontent.com/milafrerichs/78ef5702db2dc514fc2bed465d58406b/raw/f1366ee2a83a9afb1dd2427e9cbd4cd3db8d87ca/bundeslaender_simplify200.geojson\";\n    d3.json(url).then(function (bb) {\n      var bbox = d3.select('body').node().getBoundingClientRect();\n      var width = window.innerWidth;\n      var height = window.innerHeight;\n      var projection = d3.geoEqualEarth();\n      projection.fitExtent([[20, 20], [width, height]], bb);\n      var geoGenerator = d3.geoPath().projection(projection);\n      var svg = d3.select(\"body\").append('svg').style(\"width\", \"100%\").style(\"height\", \"100%\");\n      svg.append('g').selectAll('path').data(bb.features).enter().append('path').attr('d', geoGenerator).attr('fill', '#088').attr('stroke', '#000');\n    }); // render text\n  }, [data, property]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapperRef,\n    style: {\n      marginBottom: \"2rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 11\n  }, this);\n}\n\n_s(USMap, \"nQWYpVQBKg9asOOnG0otUTfkvOk=\");\n\n_c = USMap;\nexport default USMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"USMap\");","map":{"version":3,"sources":["/Users/Kevin/Desktop/program/cs 485/cdc dataset/src/components/USMap.js"],"names":["React","useRef","useEffect","useState","select","geoPath","geoMercator","min","max","scaleLinear","USMap","data","property","svgRef","wrapperRef","selectedCountry","setSelectedCountry","svg","current","url","d3","json","then","bb","bbox","node","getBoundingClientRect","width","window","innerWidth","height","innerHeight","projection","geoEqualEarth","fitExtent","geoGenerator","append","style","selectAll","features","enter","attr","marginBottom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,WAA1B,EAAuCC,GAAvC,EAA4CC,GAA5C,EAAiDC,WAAjD,QAAoE,IAApE,C,CACA;;;;AAEA,SAASC,KAAT,OAA+B;AAAA;;AAAA,MAAhB;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAgB;AAEvB,QAAMC,MAAM,GAAGZ,MAAM,EAArB;AACA,QAAMa,UAAU,GAAGb,MAAM,EAAzB,CAHuB,CAIvB;;AACA,QAAM,CAACc,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,IAAD,CAAtD,CALuB,CAOvB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,GAAG,GAAGb,MAAM,CAACS,MAAM,CAACK,OAAR,CAAlB;AAEA,QAAIC,GAAG,GAAG,iKAAV;AACAC,IAAAA,EAAE,CAACC,IAAH,CAAQF,GAAR,EAAaG,IAAb,CAAkB,UAASC,EAAT,EAAa;AAC7B,UAAIC,IAAI,GAAGJ,EAAE,CAAChB,MAAH,CAAU,MAAV,EAAkBqB,IAAlB,GAAyBC,qBAAzB,EAAX;AACA,UAAIC,KAAK,GAAGC,MAAM,CAACC,UAAnB;AACA,UAAIC,MAAM,GAAGF,MAAM,CAACG,WAApB;AACA,UAAIC,UAAU,GAAGZ,EAAE,CAACa,aAAH,EAAjB;AACAD,MAAAA,UAAU,CAACE,SAAX,CAAqB,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,EAAW,CAACP,KAAD,EAAQG,MAAR,CAAX,CAArB,EAAkDP,EAAlD;AACA,UAAIY,YAAY,GAAGf,EAAE,CAACf,OAAH,GAAa2B,UAAb,CAAwBA,UAAxB,CAAnB;AACA,UAAIf,GAAG,GAAGG,EAAE,CAAChB,MAAH,CAAU,MAAV,EAAkBgC,MAAlB,CAAyB,KAAzB,EACLC,KADK,CACC,OADD,EACU,MADV,EAELA,KAFK,CAEC,QAFD,EAEW,MAFX,CAAV;AAGApB,MAAAA,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBE,SAAhB,CAA0B,MAA1B,EACC3B,IADD,CACMY,EAAE,CAACgB,QADT,EAECC,KAFD,GAGGJ,MAHH,CAGU,MAHV,EAIGK,IAJH,CAIQ,GAJR,EAIaN,YAJb,EAKGM,IALH,CAKQ,MALR,EAKgB,MALhB,EAMGA,IANH,CAMQ,QANR,EAMkB,MANlB;AAOD,KAjBD,EAJc,CAuBd;AAED,GAzBQ,EAyBN,CAAC9B,IAAD,EAAOC,QAAP,CAzBM,CAAT;AA2BA,sBACE;AAAK,IAAA,GAAG,EAAEE,UAAV;AAAsB,IAAA,KAAK,EAAE;AAAE4B,MAAAA,YAAY,EAAE;AAAhB,KAA7B;AAAA,2BACE;AAAK,MAAA,GAAG,EAAE7B;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMH;;GAzCIH,K;;KAAAA,K;AA0CH,eAAeA,KAAf","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { select, geoPath, geoMercator, min, max, scaleLinear } from \"d3\";\n// import useResizeObserver from \"./useResizeObserver\";\n\nfunction USMap({data,property}){\n   \n        const svgRef = useRef();\n        const wrapperRef = useRef();\n        // const dimensions = useResizeObserver(wrapperRef);\n        const [selectedCountry, setSelectedCountry] = useState(null);\n      \n        // will be called initially and on every data change\n        useEffect(() => {\n          const svg = select(svgRef.current);\n      \n          var url = \"https://gist.githubusercontent.com/milafrerichs/78ef5702db2dc514fc2bed465d58406b/raw/f1366ee2a83a9afb1dd2427e9cbd4cd3db8d87ca/bundeslaender_simplify200.geojson\";\n          d3.json(url).then(function(bb) {\n            var bbox = d3.select('body').node().getBoundingClientRect()\n            var width = window.innerWidth;\n            var height = window.innerHeight;\n            var projection = d3.geoEqualEarth();\n            projection.fitExtent([[20, 20], [width, height]], bb);\n            var geoGenerator = d3.geoPath().projection(projection);\n            var svg = d3.select(\"body\").append('svg')\n                .style(\"width\", \"100%\")\n                .style(\"height\", \"100%\");\n            svg.append('g').selectAll('path')\n            .data(bb.features)\n            .enter()\n              .append('path')\n              .attr('d', geoGenerator)\n              .attr('fill', '#088')\n              .attr('stroke', '#000');\n          });\n      \n          // render text\n         \n        }, [data, property]);\n      \n        return (\n          <div ref={wrapperRef} style={{ marginBottom: \"2rem\" }}>\n            <svg ref={svgRef}></svg>\n          </div>\n        );\n      \n    }\n      export default USMap;\n"]},"metadata":{},"sourceType":"module"}