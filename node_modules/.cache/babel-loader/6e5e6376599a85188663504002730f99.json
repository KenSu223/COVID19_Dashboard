{"ast":null,"code":"export default function (values, valueof) {\n  let min;\n  let max;\n\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && value >= value) {\n        if (min === undefined) {\n          min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && value >= value) {\n        if (min === undefined) {\n          min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}","map":{"version":3,"sources":["/Users/Kevin/Desktop/program/cs 485/cdc dataset/node_modules/d3-array/src/extent.js"],"names":["values","valueof","min","max","undefined","value","index"],"mappings":"AAAA,eAAe,UAASA,MAAT,EAAiBC,OAAjB,EAA0B;AACvC,MAAIC,GAAJ;AACA,MAAIC,GAAJ;;AACA,MAAIF,OAAO,KAAKG,SAAhB,EAA2B;AACzB,SAAK,IAAIC,KAAT,IAAkBL,MAAlB,EAA0B;AACxB,UAAIK,KAAK,IAAI,IAAT,IAAiBA,KAAK,IAAIA,KAA9B,EAAqC;AACnC,YAAIH,GAAG,KAAKE,SAAZ,EAAuB;AACrBF,UAAAA,GAAG,GAAGC,GAAG,GAAGE,KAAZ;AACD,SAFD,MAEO;AACL,cAAIH,GAAG,GAAGG,KAAV,EAAiBH,GAAG,GAAGG,KAAN;AACjB,cAAIF,GAAG,GAAGE,KAAV,EAAiBF,GAAG,GAAGE,KAAN;AAClB;AACF;AACF;AACF,GAXD,MAWO;AACL,QAAIC,KAAK,GAAG,CAAC,CAAb;;AACA,SAAK,IAAID,KAAT,IAAkBL,MAAlB,EAA0B;AACxB,UAAI,CAACK,KAAK,GAAGJ,OAAO,CAACI,KAAD,EAAQ,EAAEC,KAAV,EAAiBN,MAAjB,CAAhB,KAA6C,IAA7C,IAAqDK,KAAK,IAAIA,KAAlE,EAAyE;AACvE,YAAIH,GAAG,KAAKE,SAAZ,EAAuB;AACrBF,UAAAA,GAAG,GAAGC,GAAG,GAAGE,KAAZ;AACD,SAFD,MAEO;AACL,cAAIH,GAAG,GAAGG,KAAV,EAAiBH,GAAG,GAAGG,KAAN;AACjB,cAAIF,GAAG,GAAGE,KAAV,EAAiBF,GAAG,GAAGE,KAAN;AAClB;AACF;AACF;AACF;;AACD,SAAO,CAACH,GAAD,EAAMC,GAAN,CAAP;AACD","sourcesContent":["export default function(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && value >= value) {\n        if (min === undefined) {\n          min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && value >= value) {\n        if (min === undefined) {\n          min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n"]},"metadata":{},"sourceType":"module"}