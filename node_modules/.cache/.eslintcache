[{"/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/index.js":"1","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/App.js":"2","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/serviceWorker.js":"3","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/USMap.js":"4","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/BarChartData.js":"5","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/useResizeObserver.js":"6","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/BarChart.js":"7","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/Map.js":"8","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/maps.js":"9"},{"size":452,"mtime":1630367255000,"results":"10","hashOfConfig":"11"},{"size":995,"mtime":1637725939237,"results":"12","hashOfConfig":"11"},{"size":4951,"mtime":1630367255000,"results":"13","hashOfConfig":"11"},{"size":2578,"mtime":1637632311439,"results":"14","hashOfConfig":"11"},{"size":1030,"mtime":1630367255000,"results":"15","hashOfConfig":"11"},{"size":693,"mtime":1637531255223,"results":"16","hashOfConfig":"11"},{"size":2417,"mtime":1630367255000,"results":"17","hashOfConfig":"11"},{"size":1571,"mtime":1637725841475,"results":"18","hashOfConfig":"11"},{"size":2588,"mtime":1638081407999,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"e3udzp",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/index.js",[],["42","43"],"/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/App.js",["44","45","46","47","48"],"import React,{useEffect, useState} from 'react';\nimport BarChartData from './components/BarChartData'\nimport data from \"./customgeo.json\"\nimport USMap from\"./components/USMap.js\"\nimport Map from \"./components/Map.js\"\nimport dataus from './us-county-boundaries.json'\nimport datageo from './components/usmap.json'\nimport Mapo from \"./components/maps.js\"\nimport ReactLoading from 'react-loading';\nimport csv from './convertcsv.json';\nfunction App() {\n  const [statesData,setStateData]=useState([]); \n  const [property,setProperty]=useState(\"pop_est\");\n  useEffect(() => {\n    (async () => {\n      const res = await fetch(datageo);\n      const statesData = await res.json();\n      // Set the statesData with the data received from fetch().\n      setStateData(statesData);\n    })();\n  }, []);\n  if(statesData){\n  return (\n  \t<div>\n    // <USMap data={data} property={property}/>\n    <Mapo data={datageo} csv={csv} />\n    </div>\n    \n  )\n}\n\nelse{\nreturn (\n  <ReactLoading/>\n)\n}\n}\n\nexport default App;\n","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/serviceWorker.js",[],"/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/USMap.js",["49","50","51","52","53","54","55"],"import React, { useRef, useEffect, useState } from \"react\";\nimport { select, geoPath, geoMercator, min, max, scaleLinear } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport * as d3 from 'd3'\nfunction USMap({data,property}){\n        console.log(data);\n        const svgRef = useRef();\n        const wrapperRef = useRef();\n        // const dimensions = useResizeObserver(wrapperRef);\n        const [selectedCountry, setSelectedCountry] = useState(null);\n        // const dimensions=useResizeObserver(wrapperRef);\n        // will be called initially and on every data change\n        useEffect(() => {\n          const svg = select(svgRef.current);\n      \n        //   const minProp = min(data.features, feature => feature.properties[property]);\n        //   const maxProp = max(data.features, feature => feature.properties[property]);\n        //   const colorScale = scaleLinear()\n        //     .domain([minProp, maxProp])\n        //     .range([\"#ccc\", \"red\"]);\n      \n          // use resized dimensions\n          // but fall back to getBoundingClientRect, if no dimensions yet.\n          const { width, height } =\n             wrapperRef.current.getBoundingClientRect();\n      \n          // projects geo-coordinates on a 2D plane\n          const projection = geoMercator()\n            .fitSize([width, height], selectedCountry || data)\n            .precision(100);\n      \n          // takes geojson data,\n          // transforms that into the d attribute of a path element\n          const pathGenerator = geoPath().projection(projection);\n\n        \n        // console.log(data.features);\n          // render each country\n          // svg\n          //   .selectAll(\".country\")\n          //   .data(data.features)\n          //   .join(\"path\")\n          //   // .on(\"click\", feature => {\n          //   //   setSelectedCountry(selectedCountry === feature ? null : feature);\n          //   // })\n          //   .attr(\"class\", \"country\")\n          //   .transition()\n          //   .attr(\"d\", feature => pathGenerator(feature));\n      \n          // render text\n          svg\n          .selectAll(\"path\")\n          .data(data.features)\n          .enter()\n          .append('path')\n          .classed(\"country\",true)\n          .attr(\"d\", feature => pathGenerator(feature))\n          .attr('fill','#088')\n          .attr('stroke','#000');\n         \n        }, [data]);\n      \n        return (\n          <div ref={wrapperRef} style={{ marginBottom: \"2rem\" }}>\n            <svg ref={svgRef}></svg>\n          </div>\n        );\n      \n    }\n      export default USMap;\n","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/BarChartData.js",[],"/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/useResizeObserver.js",[],"/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/BarChart.js",[],"/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/Map.js",["56","57","58"],"import React, { useRef, useEffect, useState } from \"react\";\nimport * as d3 from 'd3'\n\nfunction Map (props)  {\n   \n    //////////////////////////////////////////////////////\n    // REFs\n    //////////////////////////////////////////////////////\n    console.log(props.data);\n    const svgRef = useRef();\n    const projRef = useRef(d3.geoMercator().center([-73.93, 40.72]).scale(57500));\n    const pathRef = useRef()\n    useEffect(() => {\n        // GRAB CURRENT WIDTH/HEIGHT OF DIV ID=\"MAP\"\n        const height = svgRef.current.clientHeight;\n        const width = svgRef.current.clientWidth;\n        // FINE TUNE THE POSITION THE MAP WITHING THE ELEMENT\n         projRef.current.translate([width  / 2, height  / 2 ]);\n    \n        // ASSING THE PROJECTION A PROJECTION\n        const path = d3.geoPath().projection(projRef.current);\n        if (props.data.features.length) {\n            console.log(props.data);\n          renderChart(props.data.features, path);\n        }\n     }, [props.data.features]);\n\n     const renderChart = (data, path) => {\n         \n        d3.select(svgRef.current).selectAll('path').data(data).enter()\n          .append('path')\n          .attr('class', (d) => {\n              console.log(d);\n              return d.properties})\n          .attr('d', path)\n        //   .style('fill', (d) => boroughLegend(d.properties.borough))\n      };\n     //////////////////////////////////////////////////////\n    return(    \n        <svg id=\"boroughs-map\" ref={svgRef}>\n        {props.data.features && renderChart()}\n      </svg>\n    )\n }\n export default Map;","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/maps.js",["59","60","61","62","63","64","65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":20},{"ruleId":"70","severity":1,"message":"74","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":11},{"ruleId":"70","severity":1,"message":"75","line":6,"column":8,"nodeType":"72","messageId":"73","endLine":6,"endColumn":14},{"ruleId":"70","severity":1,"message":"76","line":13,"column":19,"nodeType":"72","messageId":"73","endLine":13,"endColumn":30},{"ruleId":"77","severity":1,"message":"78","line":24,"column":9,"nodeType":"79","messageId":"80","endLine":25,"endColumn":8},{"ruleId":"70","severity":1,"message":"81","line":2,"column":40,"nodeType":"72","messageId":"73","endLine":2,"endColumn":43},{"ruleId":"70","severity":1,"message":"82","line":2,"column":45,"nodeType":"72","messageId":"73","endLine":2,"endColumn":48},{"ruleId":"70","severity":1,"message":"83","line":2,"column":50,"nodeType":"72","messageId":"73","endLine":2,"endColumn":61},{"ruleId":"70","severity":1,"message":"84","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":25},{"ruleId":"70","severity":1,"message":"85","line":4,"column":13,"nodeType":"72","messageId":"73","endLine":4,"endColumn":15},{"ruleId":"70","severity":1,"message":"86","line":10,"column":33,"nodeType":"72","messageId":"73","endLine":10,"endColumn":51},{"ruleId":"87","severity":1,"message":"88","line":61,"column":12,"nodeType":"89","endLine":61,"endColumn":18,"suggestions":"90"},{"ruleId":"70","severity":1,"message":"91","line":1,"column":36,"nodeType":"72","messageId":"73","endLine":1,"endColumn":44},{"ruleId":"70","severity":1,"message":"92","line":12,"column":11,"nodeType":"72","messageId":"73","endLine":12,"endColumn":18},{"ruleId":"87","severity":1,"message":"93","line":26,"column":9,"nodeType":"89","endLine":26,"endColumn":30,"suggestions":"94"},{"ruleId":"70","severity":1,"message":"95","line":2,"column":18,"nodeType":"72","messageId":"73","endLine":2,"endColumn":25},{"ruleId":"70","severity":1,"message":"96","line":2,"column":27,"nodeType":"72","messageId":"73","endLine":2,"endColumn":38},{"ruleId":"70","severity":1,"message":"81","line":2,"column":40,"nodeType":"72","messageId":"73","endLine":2,"endColumn":43},{"ruleId":"70","severity":1,"message":"82","line":2,"column":45,"nodeType":"72","messageId":"73","endLine":2,"endColumn":48},{"ruleId":"70","severity":1,"message":"97","line":6,"column":23,"nodeType":"72","messageId":"73","endLine":6,"endColumn":35},{"ruleId":"70","severity":1,"message":"98","line":25,"column":16,"nodeType":"72","messageId":"73","endLine":25,"endColumn":19},{"ruleId":"87","severity":1,"message":"99","line":45,"column":7,"nodeType":"89","endLine":45,"endColumn":9,"suggestions":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'BarChartData' is defined but never used.","Identifier","unusedVar","'Map' is defined but never used.","'dataus' is defined but never used.","'setProperty' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","'min' is defined but never used.","'max' is defined but never used.","'scaleLinear' is defined but never used.","'useResizeObserver' is defined but never used.","'d3' is defined but never used.","'setSelectedCountry' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedCountry'. Either include it or remove the dependency array.","ArrayExpression",["103"],"'useState' is defined but never used.","'pathRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array.",["104"],"'geoPath' is defined but never used.","'geoMercator' is defined but never used.","'setStateData' is assigned a value but never used.","'svg' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'colourScale', 'maximum', and 'props.csv'. Either include them or remove the dependency array. If 'setMaximum' needs the current value of 'props.csv', you can also switch to useReducer instead of useState and read 'props.csv' in the reducer.",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [data, selectedCountry]",{"range":"112","text":"113"},"Update the dependencies array to be: [props.data, props.data.features]",{"range":"114","text":"115"},"Update the dependencies array to be: [colourScale, maximum, props.csv]",{"range":"116","text":"117"},[2373,2379],"[data, selectedCountry]",[978,999],"[props.data, props.data.features]",[1591,1593],"[colourScale, maximum, props.csv]"]