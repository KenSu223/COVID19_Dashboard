[{"/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/index.js":"1","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/App.js":"2","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/serviceWorker.js":"3","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/USMap.js":"4","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/BarChartData.js":"5","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/useResizeObserver.js":"6","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/BarChart.js":"7","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/Map.js":"8","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/maps.js":"9"},{"size":452,"mtime":1630367255000,"results":"10","hashOfConfig":"11"},{"size":945,"mtime":1637626297325,"results":"12","hashOfConfig":"11"},{"size":4951,"mtime":1630367255000,"results":"13","hashOfConfig":"11"},{"size":2580,"mtime":1637625117542,"results":"14","hashOfConfig":"11"},{"size":1030,"mtime":1630367255000,"results":"15","hashOfConfig":"11"},{"size":693,"mtime":1637531255223,"results":"16","hashOfConfig":"11"},{"size":2417,"mtime":1630367255000,"results":"17","hashOfConfig":"11"},{"size":1809,"mtime":1637557707381,"results":"18","hashOfConfig":"11"},{"size":808,"mtime":1637626264561,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"e3udzp",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/index.js",[],["42","43"],"/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/App.js",["44","45","46","47"],"/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/serviceWorker.js",[],"/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/USMap.js",["48","49","50","51","52","53","54"],"import React, { useRef, useEffect, useState } from \"react\";\nimport { select, geoPath, geoMercator, min, max, scaleLinear } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport * as d3 from 'd3'\nfunction USMap({data,property}){\n        console.log(data);\n        const svgRef = useRef();\n        const wrapperRef = useRef();\n        // const dimensions = useResizeObserver(wrapperRef);\n        const [selectedCountry, setSelectedCountry] = useState(null);\n        // const dimensions=useResizeObserver(wrapperRef);\n        // will be called initially and on every data change\n        useEffect(() => {\n          const svg = select(svgRef.current);\n      \n        //   const minProp = min(data.features, feature => feature.properties[property]);\n        //   const maxProp = max(data.features, feature => feature.properties[property]);\n        //   const colorScale = scaleLinear()\n        //     .domain([minProp, maxProp])\n        //     .range([\"#ccc\", \"red\"]);\n      \n          // use resized dimensions\n          // but fall back to getBoundingClientRect, if no dimensions yet.\n          const { width, height } =\n             wrapperRef.current.getBoundingClientRect();\n      \n          // projects geo-coordinates on a 2D plane\n          const projection = geoMercator()\n            .fitSize([width, height], selectedCountry || data)\n            .precision(100);\n      \n          // takes geojson data,\n          // transforms that into the d attribute of a path element\n          const pathGenerator = geoPath().projection(projection);\n\n        \n        // console.log(data.features);\n          // render each country\n          // svg\n          //   .selectAll(\".country\")\n          //   .data(data.features)\n          //   .join(\"path\")\n          //   // .on(\"click\", feature => {\n          //   //   setSelectedCountry(selectedCountry === feature ? null : feature);\n          //   // })\n          //   .attr(\"class\", \"country\")\n          //   .transition()\n          //   .attr(\"d\", feature => pathGenerator(feature));\n      \n          // render text\n\n\n          svg\n          .selectAll(\"path\")\n          .data(data.features)\n          .enter()\n          .append('path')\n          .classed(\"country\",true)\n          .attr(\"d\", feature => pathGenerator(feature))\n          .attr('fill','#088')\n          .attr('stroke','#000');\n         \n        }, [data]);\n      \n        return (\n          <div ref={wrapperRef} style={{ marginBottom: \"2rem\" }}>\n            <svg ref={svgRef}></svg>\n          </div>\n        );\n      \n    }\n      export default USMap;\n","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/BarChartData.js",[],"/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/useResizeObserver.js",[],"/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/BarChart.js",[],"/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/Map.js",["55","56","57"],"import React, { useRef, useEffect, useState } from \"react\";\nimport * as d3 from 'd3'\n\nfunction Map (props)  {\n   \n    //////////////////////////////////////////////////////\n    // REFs\n    //////////////////////////////////////////////////////\n    console.log(props.data);\n    const svgRef = useRef();\n    const projRef = useRef(d3.geoMercator().center([-73.93, 40.72]).scale(57500));\n    const pathRef = useRef()\n    useEffect(() => {\n        // GRAB CURRENT WIDTH/HEIGHT OF DIV ID=\"MAP\"\n        const height = svgRef.current.clientHeight;\n        const width = svgRef.current.clientWidth;\n        // FINE TUNE THE POSITION THE MAP WITHING THE ELEMENT\n         projRef.current.translate([width  / 2, height  / 2 ]);\n    \n        // ASSING THE PROJECTION A PROJECTION\n        const path = d3.geoPath().projection(projRef.current);\n        if (props.data.features.length) {\n            console.log(props.data);\n          renderChart(props.data.features, path);\n        }\n     }, [props.data.features]);\n    ////////////////////////////////////////////////////// \n    // RENDER THE CHART USING D3\n    //////////////////////////////////////////////////////   \n     ////////////////////////////////////////////////////// \n     // RENDER THE SVG\n     const renderChart = (data, path) => {\n         \n        d3.select(svgRef.current).selectAll('path').data(data).enter()\n          .append('path')\n          .attr('class', (d) => {\n              console.log(d);\n              return d.properties})\n          .attr('d', path)\n        //   .style('fill', (d) => boroughLegend(d.properties.borough))\n      };\n     //////////////////////////////////////////////////////\n    return(    \n        <svg id=\"boroughs-map\" ref={svgRef}>\n        {props.data.features && renderChart()}\n      </svg>\n    )\n }\n export default Map;","/Users/Kevin/Desktop/program/cs 485/project485/kenry/src/components/maps.js",["58","59","60"],"import React, { useRef, useEffect, useState } from \"react\";\nfunction Mapo (props){\n    const [statesData,setStateData]=useState(props.data);\n    console.log(statesData);\n    return (\n        <svg viewBox=\"0 0 960 600\">\n          {statesData.map((stateData, index) =>\n            <path\n              className=\"someCSSClass\"\n              style={{cursor: \"pointer\", fill: \"orange\"}}\n              key={index}\n              stroke=\"#fff\"\n              strokeWidth=\"6px\"\n              d={stateData.shape}\n              onMouseOver={(event) => {\n                event.target.style.fill = 'red';\n              }}\n              onMouseOut={(event) => {\n                event.target.style.fill = 'orange';\n              }}\n            >\n            </path>\n          )}\n        </svg>\n      )\n}\nexport default Mapo;",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":20},{"ruleId":"65","severity":1,"message":"69","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":11},{"ruleId":"65","severity":1,"message":"70","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":14},{"ruleId":"65","severity":1,"message":"71","line":12,"column":19,"nodeType":"67","messageId":"68","endLine":12,"endColumn":30},{"ruleId":"65","severity":1,"message":"72","line":2,"column":40,"nodeType":"67","messageId":"68","endLine":2,"endColumn":43},{"ruleId":"65","severity":1,"message":"73","line":2,"column":45,"nodeType":"67","messageId":"68","endLine":2,"endColumn":48},{"ruleId":"65","severity":1,"message":"74","line":2,"column":50,"nodeType":"67","messageId":"68","endLine":2,"endColumn":61},{"ruleId":"65","severity":1,"message":"75","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":25},{"ruleId":"65","severity":1,"message":"76","line":4,"column":13,"nodeType":"67","messageId":"68","endLine":4,"endColumn":15},{"ruleId":"65","severity":1,"message":"77","line":10,"column":33,"nodeType":"67","messageId":"68","endLine":10,"endColumn":51},{"ruleId":"78","severity":1,"message":"79","line":63,"column":12,"nodeType":"80","endLine":63,"endColumn":18,"suggestions":"81"},{"ruleId":"65","severity":1,"message":"82","line":1,"column":36,"nodeType":"67","messageId":"68","endLine":1,"endColumn":44},{"ruleId":"65","severity":1,"message":"83","line":12,"column":11,"nodeType":"67","messageId":"68","endLine":12,"endColumn":18},{"ruleId":"78","severity":1,"message":"84","line":26,"column":9,"nodeType":"80","endLine":26,"endColumn":30,"suggestions":"85"},{"ruleId":"65","severity":1,"message":"86","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":23},{"ruleId":"65","severity":1,"message":"87","line":1,"column":25,"nodeType":"67","messageId":"68","endLine":1,"endColumn":34},{"ruleId":"65","severity":1,"message":"88","line":3,"column":23,"nodeType":"67","messageId":"68","endLine":3,"endColumn":35},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'BarChartData' is defined but never used.","Identifier","unusedVar","'Map' is defined but never used.","'dataus' is defined but never used.","'setProperty' is assigned a value but never used.","'min' is defined but never used.","'max' is defined but never used.","'scaleLinear' is defined but never used.","'useResizeObserver' is defined but never used.","'d3' is defined but never used.","'setSelectedCountry' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedCountry'. Either include it or remove the dependency array.","ArrayExpression",["91"],"'useState' is defined but never used.","'pathRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array.",["92"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","'setStateData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [data, selectedCountry]",{"range":"97","text":"98"},"Update the dependencies array to be: [props.data, props.data.features]",{"range":"99","text":"100"},[2375,2381],"[data, selectedCountry]",[978,999],"[props.data, props.data.features]"]